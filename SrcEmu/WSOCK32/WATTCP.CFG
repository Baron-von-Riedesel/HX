
; the HX Winsocket emulation is based on WatTCP, which requires
; this initialisation file. It should be found in the directory
; where HX's WSOCK32.DLL is stored. By setting environment variable
; WATTCP.CFG=<dir> this behaviour may be changed.
;
; most entries here are optional, but some are important. if a
; DHCP server is present, just set:
;   dhcp.server = <ip address of dhcp server>
;   my_ip = dhcp
; else set: 
;   my_ip = <ip address>
;   netmask = <net mask>
;   domain.suffix = <suffix>
;
; if net access is through a proxy set:
;   http.proxy = <ip address of proxy: port>
;
;-----------------------------------------------------------
; if you get error: "all attempts to get an IP address ... failed"
; then search for file %TEMP%\W32DHCP.TMP and delete it.
;-----------------------------------------------------------

;print = "Waterloo TCP/IP setup"   ; optional key/value
;pkt.vector = 0x7e   ; optional
pkt.txretries = 2   ; optional
pkt.rxmode = 3  ; optional
pkt.txmode = 0  ; optional
;pkt.near_ptr = 0  ; optional (djgpp only)
pkt.rxbufs = 30   ; optional
pkt.reset = 0  ; optional
;pcap.device =  ; optional
;pcap.txretries = 2 ; optional
;pcap.rxmode = 0x09  ; optional
;pcap.rxbufs = 20  ; optional
;pcap.highprio = 0  ; optional
;pcap.dumpfile = $(TEMP)\winpcap_dump.txt  ; optional
my_ip = dhcp
;hostname = "" ; optional
;netmask = 255.255.255.0  ; mandatory if not using DHCP
;domain.suffix = your.domain.com  ; mandatory if not using DHCP
domain.timeout = 0  ; optional
domain.recurse = 1  ; optional
domain.idna = 1  ; optional
domain.do_ipv6 = 1  ; optional
domain.windns = 0x0000  ; optional
dynamic_host = 0  ; optional
rand_lport = 1  ; optional
sockdelay = 30  ; optional
inactive = 0  ; optional
datatimeout = 0 ; optional
debug = 0  ; optional
mss = 1460  ; optional
mtu = 1500  ; optional
tcp.nagle = 1   ; optional
tcp.opt.ts = 0  ; optional
tcp.opt.sack = 0  ; optional
tcp.opt.wscale = 0  ; optional
tcp.recv_win = 16384  ; optional
tcp.mtu_discovery = 0  ; optional
tcp.blackhole_detect = 0  ; optional
tcp.timer.open_to   = 1000    ; TCP open timer value
tcp.timer.close_to  = 1000    ; TCP close timer value
tcp.timer.rto_add   = 100     ; added value in RTO calculation
tcp.timer.rto_base  = 10      ; base RTO value
tcp.timer.rto_scale = 64      ; scaling factor for delayed ACKs
tcp.timer.retran_to = 10      ; time for doing retransmits
tcp.timer.max_vjsa  = 80000   ; Max VJ standard average;   SRTT   (80s)
tcp.timer.max_vjsd  = 20000   ; Max VJ standard deviation; RTTVAR (20s)
tcp.timer.reset_to = 100
tcp.timer.keepalive = 120  ; optional
tcp.timer.keepintvl = 30
tcp.timer.max_idle = 60
icmp_mask_req = 0  ; optional
language = en,$(ETC)\watlang.txt
;hosts = $(ETC)\hosts  ; optional
services = $(ETC)\services  ; optional
;protocols = $(ETC)\protocol  ; optional
;networks = $(ETC)\networks  ; optional
;ethers = $(ETC)\ethers  ; optional
profile.enable = 0  ; optional
;profile.file = .\wattcp.pro  ; optional
memdbg.enable   = 0                   ; optional
memdbg.dumpfile = $(TEMP)\wattcp.mem  ; optional
dhcp.server = 192.168.178.1
dhcp.trace = 0
dhcp.bcast = 1
dhcp.timeout = 10
dhcp.retries = 3
dhcp.arpcheck = 0
dhcp.config = $(TEMP)\W32DHCP.TMP
dhcp.req_list = 3,6,8,9,12,15,19,20,23,26,35,36,37,38
dhcp.userclass = value1,value2   ; see RFC-3004
dhcp.vendclass = "Watt-32"   ; RFC-2132, option 60
ip.def_ttl = 254  ; optional
ip.def_tos = 0x00  ; optional
ip.id_incr = 1  ; optional
ip.frag_reasm = 15  ; optional
ip.dont_frag = 0  ; optional
ip.loopback = 0x01  ; optional
ip6.my_ip = ::  ; optional
ip6.hosts6 = $(ETC)\hosts6
ip6.6to4_gateway = 0.0.0.0  ; optional
ip6.teredo = 0.0.0.0  ; optional
ip6.def_ttl = 254  ; optional
use_rdtsc = 0   ; optional
debug.file = wattcp.dbg  ; optional
debug.filter = all   ; optional
debug.proto = arp/rarp/ip/udp/tcp/icmp/igmp
debug.mode = all
debug.stat = 1  ; optional
debug.dns = 1  ; optional
debug.linebuf = 0  ; optional
debug.pcap = 0  ; optional
sk_debug.device = wattcp.sk    ; in current directory
sk_debug.openmode = "w+"  ; default

bind.hostaliases = $(HOSTALIASES)  ; optional
bind.res_options = $(RES_OPTIONS)  ; optional
syslog.file = ; optional
syslog.host = ; optional
syslog.port = 514  ; optional
syslog.level = emerg/alert/error  ; optional
tftp.boot_file = ; optional
tftp.server = ; optional
tftp.timeout = 8 ; optional
tftp.retry = 5 ; optional
tftp.openmode = "wb"  ; default
tftp.mode = "octet" ; optional
tftp.port = 0 ; optional
echo.daemon    = 0                 ; active echo service
echo.host      = 255.255.255.255   ; accept from anybody
echo.port      = 7                 ; listen on port 7
discard.daemon = 0                 ; active discard service
discard.host   = 255.255.255.255   ; accept from anybody
discard.port   = 9                 ; listen on port 9

;http.proxy = <your.http.proxy>:<port>  ; no default

;talk.localuser  = <your signature/handle>
;talk.screenmode = autocr,split
;talk.colors     = 1E,1A,71,71,71
;talk.alias      = joe:joe@some.domain.com
;talk.logfile    = $(WATTCP.CFG)\talk\talk.log
;talk.message    = "%s is busy. Try again later.\n"

;snuz.tmpdir = $(TEMP)
;snuz.rc     = $(ETC)\news\snuz.rc      ; list of subscribed groups, etc
;snuz.active = $(ETC)\news\active       ; list of all groups
;snuz.host   = news.server.com          ; news server ipaddr
;snuz.from   = joe@some.domain.com      ; the user's email-address
;snuz.editor = edit.exe                 ; editor for writing posts
;snuz.smtp   = "popmail send %H %D %f"  ; external sendmail program

smbpd.workgroup    = "my-work-group"
smbpd.printer1name = "my-printer-at-lpt1"
smbpd.printer2name = "my-printer-at-lpt2"
smbpd.printer3name = "my-printer-at-lpt3"

smtp.subdir   = $(ETC)\smtpd\mail\  ; sub-dir for mail/temp files, must exist
smtp.sessions = 8                   ; # of SMTP sessions

snmp.mibfile  = $(snmp)\mib.txt
snmp.mib2file = $(snmp)\mib-v2.txt


